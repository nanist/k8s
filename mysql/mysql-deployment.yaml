apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment #指定deployment的名字
  namespace: dev-mysql
  labels:  
    app: mysql-labels-app 
spec: #规约
  replicas: 3 #pod的副本数量，就是希望创建多少个pod的副本.可选字段。它的默认值是1。
  selector:  #selector 字段定义 Deployment 如何查找要管理的 Pods。必须匹配 .spec.template.metadata.labels，否则请求会被 API 拒绝。
    matchLabels:
      app: mysql-pod
  template: #Deployment Pod 模板；它和 Pod 的语法规则完全相同。 只是这里它是嵌套的，因此不需要 apiVersion 或 kind。
    metadata:
      labels:
        app: mysql-pod
    spec: #pod模板规约
      containers: #容器
      - name: mysql #容器的名称
        image: mysql:5.7 #容器使用的镜像
        ports:
        - containerPort: 3306
        volumeMounts: 
        - name: mypv1 #pv的name
          mountPath: /var/lib/mysqlMount#容器内对应的路径，这里这个路径不对，应该是/var/lib/mysql。MySQL的数据都在这个里面，需要持久化的也就是这个路径下的内容
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "123456"
      volumes:
      - name: mypv1 #pv的name
        persistentVolumeClaim:
          claimName: mypvclocal 
      restartPolicy: Always #Deployment 中的 Pod 模板必须指定适当的标签和适当的重新启动策略。只有 .spec.template.spec.restartPolicy 等于 Always 才是被允许的，这也是在没有指定时的默认设置
